#include <WiFi.h>
#include <HTTPClient.h>
#include <DHT.h>

#define DHTPIN 4
#define DHTTYPE DHT11
#define TDS_PIN 34
#define LED_PIN 2

DHT dht(DHTPIN, DHTTYPE);

const char* ssid = "Piww";
const char* password = "piwpiwpiw";
const char* serverUrl = "http://192.168.85.23/ConnectAndroid_toMySQL/informasi_data.php";

void setup() {
  Serial.begin(115200);
  dht.begin();
  pinMode(LED_PIN, OUTPUT);
  digitalWrite(LED_PIN, LOW);
  WiFi.begin(ssid, password);
  Serial.print("Connecting to WiFi");
  
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.print(".");
  }
  Serial.println("\nConnected to WiFi");
}

// Deklarasi fungsi sendSensorData
void sendSensorData(float temperature, float humidity, float ppm, String status) {
  if (WiFi.status() == WL_CONNECTED) {
    HTTPClient http;
    http.begin(serverUrl);
    http.addHeader("Content-Type", "application/x-www-form-urlencoded");
    http.setTimeout(20000);
    
    String postData = "temperature=" + String(temperature) + "&humidity=" + String(humidity) + "&ppm=" + String(ppm) + "&status=" + status;
    int httpResponseCode = http.POST(postData);
    
    if (httpResponseCode > 0) {
      String response = http.getString();
      Serial.println("Database Response SUHU : " + response);
    } else {
      Serial.println("Gagal dalam mengirim data POST: " + String(httpResponseCode));
    }
    http.end();
  }
}

// Deklarasi fungsi updateLEDStatus
void updateLEDStatus() {
  if (WiFi.status() == WL_CONNECTED) {
    HTTPClient http;
    http.begin(serverUrl); 
    int httpResponseCode = http.GET();
    
    if (httpResponseCode > 0) {
      String payload = http.getString();
      Serial.println("Database Server Update : " + payload);

      if (payload.indexOf("\"status\":\"ON\"") != -1) {
        digitalWrite(LED_PIN, HIGH);  
      } else if (payload.indexOf("\"status\":\"OFF\"") != -1) {
        digitalWrite(LED_PIN, LOW);   
      }
    } else {
      Serial.println("Gagal Mengambil data GET: " + String(httpResponseCode));
    }
    http.end();
  }
}

void loop() {
  String status = digitalRead(LED_PIN) == HIGH ? "ON" : "OFF";
  float temperature = dht.readTemperature();
  float humidity = dht.readHumidity();
  
  // Membaca nilai tegangan dari sensor TDS
  float voltage = analogRead(TDS_PIN) * (3.3 / 4095.0); // mengkonversi nilai analog yang terbaca dari 0 hingga 4095
  Serial.print("Tegangan dari sensor TDS: ");
  Serial.println(voltage);

  // Mengonversi tegangan ke nilai TDS (ppm)
  float tdsFactor = 1.2;
  float ppm = (voltage / tdsFactor) * 1000;
  
  if (ppm < 0 || ppm > 1000 || isnan(ppm)) {
    ppm = 0;
  }
  if (isnan(temperature) || isnan(humidity)) {
    Serial.println("Failed to read from DHT sensor!");
    return;
  }
  
  sendSensorData(temperature, humidity, ppm, status);
  updateLEDStatus();

  Serial.print("Temperature: ");
  Serial.print(temperature);
  Serial.print(" Â°C, Humidity: ");
  Serial.print(humidity);
  Serial.print(" %, TDS (ppm): ");
  Serial.print(ppm);
  Serial.print(", LED: ");
  Serial.println(status);

  delay(1000);
}
